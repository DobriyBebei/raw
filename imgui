#include <iostream>
#include <imgui.h>
#include <imgui_stdlib.h>
#include <imgui_impl_glfw.h>
#include <imgui_impl_opengl3.h>
#include <GL/gl3w.h>
#include <GLFW/glfw3.h>
#include <stdlib.h>
#include <stdio.h>

int main(int argc, char** argv)
{
    // Инициализируем GLFW и создаем окно
    GLFWwindow* window;
    if (!glfwInit())
        return -1;

    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 3);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 3);
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);

    window = glfwCreateWindow(640, 480, "ImGui", NULL, NULL);
    if (!window)
    {
        glfwTerminate();
        return -1;
    }

    glfwMakeContextCurrent(window);
    glfwSwapInterval(1);

    // Инициализируем GL3W
    if (gl3wInit() != 0)
    {
        return -1;
    }

    // Инициализируем ImGui
    IMGUI_CHECKVERSION();
    ImGui::CreateContext();
    ImGuiIO& io = ImGui::GetIO(); (void)io;
    ImGui_ImplGlfw_InitForOpenGL(window, true);
    ImGui_ImplOpenGL3_Init();

    bool show_demo_window = true;
    bool show_another_window = false;
    ImVec4 clear_color = ImColor(114, 144, 154);

    // Главный цикл приложения
    while (!glfwWindowShouldClose(window))
    {
        glfwPollEvents();

        // Начало рисования нового кадра GUI
        ImGui_ImplOpenGL3_NewFrame();
        ImGui_ImplGlfw_NewFrame();
        ImGui::NewFrame();

        // Создаем главное меню с табами
        const char* tabs[] = { "Tab 1", "Tab 2", "Tab 3" };
        static int current_tab = 0;
        if (ImGui::BeginMainMenuBar()) {
            if (ImGui::BeginMenu("File")) {
                if (ImGui::MenuItem("New")) {
                    std::cout << "New file created!" << std::endl;
                }
                if (ImGui::MenuItem("Open")) {
                    std::cout << "Open file selected!" << std::endl;
                }
                if (ImGui::MenuItem("Save")) {
                    std::cout << "Save file selected!" << std::endl;
                }
                ImGui::EndMenu();
            }
            if (ImGui::BeginMenu("Edit")) {
                if (ImGui::MenuItem("Undo", "CTRL+Z")) {}
                if (ImGui::MenuItem("Redo", "CTRL+Y", false, false)) {}  // Добавляем отключенный пункт меню
                ImGui::EndMenu();
            }
            ImGui::EndMainMenuBar();

            // Рендерим содержимое текущей вкладки
            ImGui::Begin(tabs[current_tab], &show_demo_window, ImGuiWindowFlags_MenuBar);

            // Добавляем чекбоксы
            static bool checkbox1 = false;
            ImGui::Checkbox("Checkbox 1", &checkbox1);

            static bool checkbox2 = false;
            ImGui::Checkbox("Checkbox 2", &checkbox2);

            // Добавляем ползунки
            static float slider1 = 0.5;
            ImGui::SliderFloat("Slider 1", &slider1, 0.0f, 1.0f);

            static float slider2 = 0.2;
            ImGui::SliderFloat("Slider 2", &slider2, 0.0f, 1.0f);

            // Изменяем вкладку с помощью табов
            for (int i = 0; i < 3; ++i)
            {
                if (ImGui::Button(tabs[i]))
                {
                    current_tab = i;
                    break;
                }
            }

            ImGui::End();
        }

        // Рисуем интерфейс на экране OpenGL
        glClearColor(clear_color.x, clear_color.y, clear_color.z, clear_color.w);
        glClear(GL_COLOR_BUFFER_BIT);

        ImGui::Render();
        ImGui_ImplOpenGL3_RenderDrawData(ImGui::GetDrawData());

        glfwSwapBuffers(window);
    }

    // Очищаем память ImGui и GLFW
    ImGui_ImplOpenGL3_Shutdown();
    ImGui_ImplGlfw_Shutdown();
    ImGui::DestroyContext();

    glfwDestroyWindow(window);
    glfwTerminate();

    return 0;
}
